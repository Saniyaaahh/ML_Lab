pip install pgmpy
 
# Import necessary libraries
import numpy as np
import pandas as pd
import csv
from pgmpy.estimators import MaximumLikelihoodEstimator
from pgmpy.models import BayesianModel
from pgmpy.inference import VariableElimination
 
# Load the heart disease dataset from a CSV file named 'heart.csv'
heartDisease = pd.read_csv('heart.csv')
 
# Replace any '?' values in the dataset with NaN
heartDisease = heartDisease.replace('?', np.nan)
 
# Print sample instances from the dataset
print('Sample instances from the dataset are given below')
print(heartDisease.head())
 
# Print attributes and datatypes in the dataset
print('\n Attributes and datatypes')
print(heartDisease.dtypes)
 
# Define the structure of the Bayesian Network model
model = BayesianModel([('age','heartdisease'), ('sex','heartdisease'), ('exang','heartdisease'), ('cp','heartdisease'), ('heartdisease','restecg'), ('heartdisease','chol')])
 
# Fit the Bayesian Network model using Maximum Likelihood Estimator
print('\nLearning CPD using Maximum likelihood estimators')
model.fit(heartDisease, estimator=MaximumLikelihoodEstimator)
 
# Perform inference with the Bayesian Network model
print('\n Inferencing with Bayesian Network:')
HeartDiseasetest_infer = VariableElimination(model)
 
# Query for the probability of Heart Disease given evidence of restecg = 1
print('\n 1. Probability of HeartDisease given evidence= restecg')
q1 = HeartDiseasetest_infer.query(variables=['heartdisease'], evidence={'restecg': 1})
print(q1)
 
# Query for the probability of Heart Disease given evidence of cp = 2
print('\n 2. Probability of HeartDisease given evidence= cp ')
q2 = HeartDiseasetest_infer.query(variables=['heartdisease'], evidence={'cp': 2})
print(q2)